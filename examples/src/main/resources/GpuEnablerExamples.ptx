//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21313570
// Cuda compilation tools, release 8.0, V8.0.53
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_35
.address_size 64

	// .globl	multiplyBy2
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 __T20[44] = {118, 111, 105, 100, 32, 115, 117, 109, 40, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 $str[31] = {106, 117, 109, 112, 32, 61, 61, 32, 98, 108, 111, 99, 107, 68, 105, 109, 46, 120, 32, 42, 32, 103, 114, 105, 100, 68, 105, 109, 46, 120, 0};
.global .align 1 .b8 $str1[22] = {71, 112, 117, 69, 110, 97, 98, 108, 101, 114, 69, 120, 97, 109, 112, 108, 101, 115, 46, 99, 117, 0};
.global .align 1 .b8 $str2[34] = {67, 85, 68, 65, 32, 75, 69, 82, 78, 69, 76, 32, 65, 68, 68, 32, 37, 108, 100, 32, 43, 32, 37, 108, 100, 32, 61, 32, 37, 108, 100, 32, 10, 0};
.global .align 1 .b8 $str3[34] = {67, 85, 68, 65, 32, 75, 69, 82, 78, 69, 76, 32, 77, 85, 76, 32, 37, 108, 100, 32, 42, 32, 37, 108, 100, 32, 61, 32, 37, 108, 100, 32, 10, 0};
.global .align 1 .b8 $str4[47] = {73, 110, 32, 65, 114, 114, 97, 121, 84, 101, 115, 116, 32, 110, 61, 37, 100, 32, 102, 97, 99, 116, 111, 114, 61, 37, 112, 32, 97, 114, 114, 61, 37, 112, 32, 114, 101, 115, 117, 108, 116, 61, 37, 112, 32, 10, 0};
.global .align 1 .b8 $str5[19] = {73, 110, 32, 99, 111, 110, 115, 116, 32, 37, 100, 32, 37, 100, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str6[22] = {73, 110, 32, 99, 111, 110, 115, 116, 32, 37, 108, 100, 32, 37, 108, 100, 32, 37, 108, 100, 10, 0};
.global .align 1 .b8 $str7[51] = {65, 114, 114, 97, 121, 84, 101, 115, 116, 32, 32, 91, 37, 108, 100, 93, 32, 42, 32, 91, 37, 108, 100, 32, 37, 108, 100, 32, 37, 108, 100, 93, 32, 61, 32, 91, 37, 108, 100, 32, 37, 108, 100, 32, 37, 108, 100, 93, 32, 10, 0};
.global .align 1 .b8 $str8[43] = {65, 114, 114, 97, 121, 84, 101, 115, 116, 32, 32, 91, 37, 108, 100, 93, 32, 42, 32, 91, 37, 108, 100, 32, 37, 108, 100, 32, 37, 108, 100, 93, 32, 61, 32, 91, 37, 108, 100, 93, 32, 10, 0};
.global .align 1 .b8 $str9[37] = {78, 32, 58, 32, 37, 100, 44, 32, 115, 116, 97, 103, 101, 58, 32, 37, 100, 44, 32, 116, 111, 116, 97, 108, 115, 116, 97, 103, 101, 115, 58, 32, 37, 100, 32, 10, 0};
.global .align 1 .b8 $str10[26] = {73, 110, 32, 111, 117, 116, 112, 117, 116, 65, 114, 114, 97, 121, 83, 105, 122, 101, 32, 58, 32, 37, 100, 32, 10, 0};
.global .align 1 .b8 $str11[28] = {73, 110, 32, 70, 105, 120, 101, 100, 32, 99, 111, 110, 115, 116, 32, 37, 108, 100, 32, 46, 46, 32, 37, 108, 100, 32, 10, 0};

.visible .entry multiplyBy2(
	.param .u64 multiplyBy2_param_0,
	.param .u64 multiplyBy2_param_1,
	.param .u64 multiplyBy2_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [multiplyBy2_param_0];
	ld.param.u64 	%rd1, [multiplyBy2_param_1];
	ld.param.u64 	%rd2, [multiplyBy2_param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r1, %r2, %r3, %r4;
	ld.global.u32 	%r5, [%rd4];
	setp.ge.s32	%p1, %r1, %r5;
	@%p1 bra 	BB0_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.u32 	%r6, [%rd7];
	shl.b32 	%r7, %r6, 1;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.u32 	[%rd9], %r7;

BB0_2:
	ret;
}

	// .globl	sum
.visible .entry sum(
	.param .u64 sum_param_0,
	.param .u64 sum_param_1,
	.param .u64 sum_param_2,
	.param .u64 sum_param_3,
	.param .u64 sum_param_4
)
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<43>;


	ld.param.u64 	%rd16, [sum_param_0];
	ld.param.u64 	%rd17, [sum_param_1];
	ld.param.u64 	%rd15, [sum_param_2];
	ld.param.u64 	%rd18, [sum_param_3];
	cvta.to.global.u64 	%rd39, %rd17;
	cvta.to.global.u64 	%rd2, %rd16;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32	%rd19, %r1;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mul.wide.u32 	%rd20, %r3, %r2;
	add.s64 	%rd3, %rd20, %rd19;
	cvta.to.global.u64 	%rd21, %rd18;
	ld.global.u32 	%r13, [%rd21];
	setp.eq.s32	%p1, %r13, 0;
	@%p1 bra 	BB1_5;

	setp.ne.s64	%p2, %rd3, 0;
	@%p2 bra 	BB1_12;

	ld.global.s32 	%rd23, [%rd2];
	setp.lt.s64	%p3, %rd23, 16384;
	selp.b64	%rd4, %rd23, 16384, %p3;
	mov.u32 	%r24, 0;
	mov.u32 	%r25, %r24;
	mov.u64 	%rd40, 0;
	setp.lt.s64	%p4, %rd4, 1;
	@%p4 bra 	BB1_4;

BB1_3:
	ld.global.u32 	%r16, [%rd39];
	add.s32 	%r25, %r16, %r25;
	add.s64 	%rd39, %rd39, 4;
	add.s64 	%rd40, %rd40, 1;
	setp.lt.s64	%p5, %rd40, %rd4;
	mov.u32 	%r24, %r25;
	@%p5 bra 	BB1_3;

BB1_4:
	cvta.to.global.u64 	%rd24, %rd15;
	st.global.u32 	[%rd24], %r24;
	bra.uni 	BB1_12;

BB1_5:
	ld.global.u32 	%r26, [%rd2];
	cvt.s64.s32	%rd25, %r26;
	setp.ge.s64	%p6, %rd3, %rd25;
	@%p6 bra 	BB1_12;

	mov.u32 	%r17, %nctaid.x;
	mul.lo.s32 	%r18, %r17, %r3;
	setp.eq.s32	%p7, %r18, 16384;
	@%p7 bra 	BB1_8;

	mov.u64 	%rd26, $str;
	cvta.global.u64 	%rd27, %rd26;
	mov.u64 	%rd28, $str1;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, __T20;
	cvta.global.u64 	%rd31, %rd30;
	mov.u32 	%r19, 21;
	mov.u64 	%rd32, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd27;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0
	ld.global.u32 	%r26, [%rd2];

BB1_8:
	cvt.s64.s32	%rd9, %r26;
	mov.u32 	%r27, 0;
	setp.ge.s64	%p8, %rd3, %rd9;
	@%p8 bra 	BB1_11;

	add.s64 	%rd35, %rd20, %rd19;
	shl.b64 	%rd36, %rd35, 2;
	add.s64 	%rd41, %rd39, %rd36;
	mov.u32 	%r27, 0;
	mov.u64 	%rd42, %rd3;

BB1_10:
	mov.u64 	%rd12, %rd42;
	ld.global.u32 	%r22, [%rd41];
	add.s32 	%r27, %r22, %r27;
	add.s64 	%rd41, %rd41, 65536;
	add.s64 	%rd14, %rd12, 16384;
	setp.lt.s64	%p9, %rd14, %rd9;
	mov.u64 	%rd42, %rd14;
	@%p9 bra 	BB1_10;

BB1_11:
	shl.b64 	%rd37, %rd3, 2;
	add.s64 	%rd38, %rd39, %rd37;
	st.global.u32 	[%rd38], %r27;

BB1_12:
	ret;
}

	// .globl	sum1
.visible .entry sum1(
	.param .u64 sum1_param_0,
	.param .u64 sum1_param_1,
	.param .u64 sum1_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd7, [sum1_param_0];
	ld.param.u64 	%rd8, [sum1_param_1];
	ld.param.u64 	%rd9, [sum1_param_2];
	mov.u32 	%r5, %tid.x;
	cvt.u64.u32	%rd10, %r5;
	mov.u32 	%r6, %ctaid.x;
	cvt.u64.u32	%rd11, %r6;
	mov.u32 	%r7, %ntid.x;
	cvt.u64.u32	%rd12, %r7;
	neg.s64 	%rd13, %rd11;
	mul.lo.s64 	%rd14, %rd12, %rd13;
	setp.ne.s64	%p1, %rd10, %rd14;
	@%p1 bra 	BB2_5;

	cvta.to.global.u64 	%rd15, %rd7;
	ld.global.u32 	%r1, [%rd15];
	mov.u32 	%r11, 0;
	setp.lt.s32	%p2, %r1, 1;
	@%p2 bra 	BB2_4;

	cvta.to.global.u64 	%rd18, %rd8;
	cvt.s64.s32	%rd2, %r1;
	mov.u32 	%r11, 0;
	mov.u64 	%rd19, 0;

BB2_3:
	ld.global.u32 	%r10, [%rd18];
	add.s32 	%r11, %r10, %r11;
	add.s64 	%rd18, %rd18, 4;
	add.s64 	%rd19, %rd19, 1;
	setp.lt.s64	%p3, %rd19, %rd2;
	@%p3 bra 	BB2_3;

BB2_4:
	cvta.to.global.u64 	%rd17, %rd9;
	st.global.u32 	[%rd17], %r11;

BB2_5:
	ret;
}

	// .globl	add
.visible .entry add(
	.param .u32 add_param_0,
	.param .u64 add_param_1,
	.param .u64 add_param_2,
	.param .u64 add_param_3
)
{
	.local .align 8 .b8 	__local_depot3[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<21>;


	mov.u64 	%rd20, __local_depot3;
	cvta.local.u64 	%SP, %rd20;
	ld.param.u32 	%r2, [add_param_0];
	ld.param.u64 	%rd1, [add_param_1];
	ld.param.u64 	%rd2, [add_param_2];
	ld.param.u64 	%rd3, [add_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB3_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.u64 	%rd9, [%rd8];
	ld.global.u64 	%rd10, [%rd6];
	add.s64 	%rd11, %rd9, %rd10;
	cvta.to.global.u64 	%rd12, %rd3;
	add.s64 	%rd13, %rd12, %rd5;
	st.global.u64 	[%rd13], %rd11;
	ld.global.u64 	%rd14, [%rd6];
	ld.global.u64 	%rd15, [%rd8];
	add.u64 	%rd16, %SP, 0;
	cvta.to.local.u64 	%rd17, %rd16;
	st.local.u64 	[%rd17], %rd14;
	st.local.u64 	[%rd17+8], %rd15;
	st.local.u64 	[%rd17+16], %rd11;
	mov.u64 	%rd18, $str2;
	cvta.global.u64 	%rd19, %rd18;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 1

BB3_2:
	ret;
}

	// .globl	mul
.visible .entry mul(
	.param .u32 mul_param_0,
	.param .u64 mul_param_1,
	.param .u64 mul_param_2,
	.param .u64 mul_param_3
)
{
	.local .align 8 .b8 	__local_depot4[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<21>;


	mov.u64 	%rd20, __local_depot4;
	cvta.local.u64 	%SP, %rd20;
	ld.param.u32 	%r2, [mul_param_0];
	ld.param.u64 	%rd1, [mul_param_1];
	ld.param.u64 	%rd2, [mul_param_2];
	ld.param.u64 	%rd3, [mul_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB4_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.u64 	%rd9, [%rd8];
	ld.global.u64 	%rd10, [%rd6];
	mul.lo.s64 	%rd11, %rd9, %rd10;
	cvta.to.global.u64 	%rd12, %rd3;
	add.s64 	%rd13, %rd12, %rd5;
	st.global.u64 	[%rd13], %rd11;
	ld.global.u64 	%rd14, [%rd6];
	ld.global.u64 	%rd15, [%rd8];
	add.u64 	%rd16, %SP, 0;
	cvta.to.local.u64 	%rd17, %rd16;
	st.local.u64 	[%rd17], %rd14;
	st.local.u64 	[%rd17+8], %rd15;
	st.local.u64 	[%rd17+16], %rd11;
	mov.u64 	%rd18, $str3;
	cvta.global.u64 	%rd19, %rd18;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 2

BB4_2:
	ret;
}

	// .globl	arrayTest
.visible .entry arrayTest(
	.param .u32 arrayTest_param_0,
	.param .u64 arrayTest_param_1,
	.param .u64 arrayTest_param_2,
	.param .u64 arrayTest_param_3,
	.param .u64 arrayTest_param_4,
	.param .u64 arrayTest_param_5
)
{
	.local .align 8 .b8 	__local_depot5[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<48>;


	mov.u64 	%rd47, __local_depot5;
	cvta.local.u64 	%SP, %rd47;
	ld.param.u32 	%r2, [arrayTest_param_0];
	ld.param.u64 	%rd2, [arrayTest_param_1];
	ld.param.u64 	%rd3, [arrayTest_param_2];
	ld.param.u64 	%rd4, [arrayTest_param_3];
	ld.param.u64 	%rd5, [arrayTest_param_4];
	ld.param.u64 	%rd6, [arrayTest_param_5];
	add.u64 	%rd7, %SP, 0;
	cvta.to.local.u64 	%rd8, %rd7;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	add.s64 	%rd1, %rd8, 4;
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB5_2;

	cvta.to.global.u64 	%rd9, %rd5;
	cvta.to.global.u64 	%rd10, %rd4;
	st.local.u32 	[%rd8], %r2;
	st.local.u64 	[%rd1+4], %rd2;
	st.local.u64 	[%rd1+12], %rd3;
	st.local.u64 	[%rd1+20], %rd6;
	mov.u64 	%rd13, $str4;
	cvta.global.u64 	%rd14, %rd13;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.global.u32 	%r7, [%rd10];
	ld.global.u32 	%r8, [%rd10+4];
	ld.global.u32 	%r9, [%rd10+8];
	st.local.u32 	[%rd8], %r7;
	st.local.u32 	[%rd1], %r8;
	st.local.u32 	[%rd1+4], %r9;
	mov.u64 	%rd15, $str5;
	cvta.global.u64 	%rd16, %rd15;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 4
	ld.global.u64 	%rd17, [%rd9];
	ld.global.u64 	%rd18, [%rd9+8];
	ld.global.u64 	%rd19, [%rd9+16];
	st.local.u64 	[%rd8], %rd17;
	st.local.u64 	[%rd1+4], %rd18;
	st.local.u64 	[%rd1+12], %rd19;
	mov.u64 	%rd20, $str6;
	cvta.global.u64 	%rd21, %rd20;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 5

BB5_2:
	setp.ge.s32	%p2, %r1, %r2;
	@%p2 bra 	BB5_4;

	cvta.to.global.u64 	%rd22, %rd6;
	cvta.to.global.u64 	%rd23, %rd2;
	cvta.to.global.u64 	%rd24, %rd3;
	mul.lo.s32 	%r12, %r1, 3;
	mul.wide.s32 	%rd25, %r12, 8;
	add.s64 	%rd26, %rd24, %rd25;
	mul.wide.s32 	%rd27, %r1, 8;
	add.s64 	%rd28, %rd23, %rd27;
	ld.global.u64 	%rd29, [%rd28];
	ld.global.u64 	%rd30, [%rd26];
	mul.lo.s64 	%rd31, %rd29, %rd30;
	add.s64 	%rd32, %rd22, %rd25;
	st.global.u64 	[%rd32], %rd31;
	ld.global.u64 	%rd33, [%rd28];
	ld.global.u64 	%rd34, [%rd26+8];
	mul.lo.s64 	%rd35, %rd33, %rd34;
	st.global.u64 	[%rd32+8], %rd35;
	ld.global.u64 	%rd36, [%rd28];
	ld.global.u64 	%rd37, [%rd26+16];
	mul.lo.s64 	%rd38, %rd36, %rd37;
	st.global.u64 	[%rd32+16], %rd38;
	ld.global.u64 	%rd39, [%rd28];
	ld.global.u64 	%rd40, [%rd26];
	ld.global.u64 	%rd41, [%rd26+8];
	ld.global.u64 	%rd42, [%rd26+16];
	st.local.u64 	[%rd8], %rd39;
	st.local.u64 	[%rd1+4], %rd40;
	st.local.u64 	[%rd1+12], %rd41;
	st.local.u64 	[%rd1+20], %rd42;
	st.local.u64 	[%rd1+28], %rd31;
	st.local.u64 	[%rd1+36], %rd35;
	st.local.u64 	[%rd1+44], %rd38;
	mov.u64 	%rd45, $str7;
	cvta.global.u64 	%rd46, %rd45;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 6

BB5_4:
	ret;
}

	// .globl	arrayMult
.visible .entry arrayMult(
	.param .u32 arrayMult_param_0,
	.param .u64 arrayMult_param_1,
	.param .u64 arrayMult_param_2,
	.param .u64 arrayMult_param_3,
	.param .u64 arrayMult_param_4,
	.param .u64 arrayMult_param_5
)
{
	.local .align 8 .b8 	__local_depot6[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<48>;


	mov.u64 	%rd47, __local_depot6;
	cvta.local.u64 	%SP, %rd47;
	ld.param.u32 	%r2, [arrayMult_param_0];
	ld.param.u64 	%rd2, [arrayMult_param_1];
	ld.param.u64 	%rd3, [arrayMult_param_2];
	ld.param.u64 	%rd4, [arrayMult_param_3];
	ld.param.u64 	%rd5, [arrayMult_param_4];
	ld.param.u64 	%rd6, [arrayMult_param_5];
	add.u64 	%rd7, %SP, 0;
	cvta.to.local.u64 	%rd8, %rd7;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	add.s64 	%rd1, %rd8, 4;
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB6_2;

	cvta.to.global.u64 	%rd9, %rd5;
	cvta.to.global.u64 	%rd10, %rd4;
	st.local.u32 	[%rd8], %r2;
	st.local.u64 	[%rd1+4], %rd2;
	st.local.u64 	[%rd1+12], %rd3;
	st.local.u64 	[%rd1+20], %rd6;
	mov.u64 	%rd13, $str4;
	cvta.global.u64 	%rd14, %rd13;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 7
	ld.global.u32 	%r7, [%rd10];
	ld.global.u32 	%r8, [%rd10+4];
	ld.global.u32 	%r9, [%rd10+8];
	st.local.u32 	[%rd8], %r7;
	st.local.u32 	[%rd1], %r8;
	st.local.u32 	[%rd1+4], %r9;
	mov.u64 	%rd15, $str5;
	cvta.global.u64 	%rd16, %rd15;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 8
	ld.global.u64 	%rd17, [%rd9];
	ld.global.u64 	%rd18, [%rd9+8];
	ld.global.u64 	%rd19, [%rd9+16];
	st.local.u64 	[%rd8], %rd17;
	st.local.u64 	[%rd1+4], %rd18;
	st.local.u64 	[%rd1+12], %rd19;
	mov.u64 	%rd20, $str6;
	cvta.global.u64 	%rd21, %rd20;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 9

BB6_2:
	setp.ge.s32	%p2, %r1, %r2;
	@%p2 bra 	BB6_4;

	cvta.to.global.u64 	%rd22, %rd6;
	cvta.to.global.u64 	%rd23, %rd2;
	cvta.to.global.u64 	%rd24, %rd3;
	mul.lo.s32 	%r12, %r1, 3;
	mul.wide.s32 	%rd25, %r12, 8;
	add.s64 	%rd26, %rd24, %rd25;
	mul.wide.s32 	%rd27, %r1, 8;
	add.s64 	%rd28, %rd23, %rd27;
	ld.global.u64 	%rd29, [%rd28];
	ld.global.u64 	%rd30, [%rd26];
	mul.lo.s64 	%rd31, %rd29, %rd30;
	add.s64 	%rd32, %rd22, %rd25;
	st.global.u64 	[%rd32], %rd31;
	ld.global.u64 	%rd33, [%rd28];
	ld.global.u64 	%rd34, [%rd26+8];
	mul.lo.s64 	%rd35, %rd33, %rd34;
	st.global.u64 	[%rd32+8], %rd35;
	ld.global.u64 	%rd36, [%rd28];
	ld.global.u64 	%rd37, [%rd26+16];
	mul.lo.s64 	%rd38, %rd36, %rd37;
	st.global.u64 	[%rd32+16], %rd38;
	ld.global.u64 	%rd39, [%rd28];
	ld.global.u64 	%rd40, [%rd26];
	ld.global.u64 	%rd41, [%rd26+8];
	ld.global.u64 	%rd42, [%rd26+16];
	st.local.u64 	[%rd8], %rd39;
	st.local.u64 	[%rd1+4], %rd40;
	st.local.u64 	[%rd1+12], %rd41;
	st.local.u64 	[%rd1+20], %rd42;
	st.local.u64 	[%rd1+28], %rd31;
	st.local.u64 	[%rd1+36], %rd35;
	st.local.u64 	[%rd1+44], %rd38;
	mov.u64 	%rd45, $str7;
	cvta.global.u64 	%rd46, %rd45;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 10

BB6_4:
	ret;
}

	// .globl	arrayTestMod
.visible .entry arrayTestMod(
	.param .u32 arrayTestMod_param_0,
	.param .u64 arrayTestMod_param_1,
	.param .u64 arrayTestMod_param_2,
	.param .u64 arrayTestMod_param_3,
	.param .u64 arrayTestMod_param_4,
	.param .u64 arrayTestMod_param_5
)
{
	.local .align 8 .b8 	__local_depot7[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<32>;


	mov.u64 	%rd31, __local_depot7;
	cvta.local.u64 	%SP, %rd31;
	ld.param.u32 	%r1, [arrayTestMod_param_0];
	ld.param.u64 	%rd1, [arrayTestMod_param_1];
	ld.param.u64 	%rd2, [arrayTestMod_param_2];
	ld.param.u64 	%rd3, [arrayTestMod_param_3];
	ld.param.u64 	%rd4, [arrayTestMod_param_4];
	ld.param.u64 	%rd5, [arrayTestMod_param_5];
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mul.lo.s32 	%r4, %r2, %r3;
	mov.u32 	%r5, %tid.x;
	neg.s32 	%r6, %r5;
	setp.ne.s32	%p1, %r4, %r6;
	@%p1 bra 	BB7_2;

	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd5;
	cvta.to.global.u64 	%rd9, %rd4;
	add.u64 	%rd10, %SP, 0;
	cvta.to.local.u64 	%rd11, %rd10;
	st.local.u32 	[%rd11], %r1;
	st.local.u64 	[%rd11+8], %rd1;
	st.local.u64 	[%rd11+16], %rd2;
	st.local.u64 	[%rd11+24], %rd3;
	mov.u64 	%rd12, $str4;
	cvta.global.u64 	%rd13, %rd12;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 11
	ld.global.u32 	%r8, [%rd9];
	ld.global.u32 	%r9, [%rd9+4];
	ld.global.u32 	%r10, [%rd9+8];
	st.local.u32 	[%rd11], %r8;
	st.local.u32 	[%rd11+4], %r9;
	st.local.u32 	[%rd11+8], %r10;
	mov.u64 	%rd14, $str5;
	cvta.global.u64 	%rd15, %rd14;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 12
	ld.global.u64 	%rd16, [%rd8];
	ld.global.u64 	%rd17, [%rd8+8];
	ld.global.u64 	%rd18, [%rd8+16];
	st.local.u64 	[%rd11], %rd16;
	st.local.u64 	[%rd11+8], %rd17;
	st.local.u64 	[%rd11+16], %rd18;
	mov.u64 	%rd19, $str6;
	cvta.global.u64 	%rd20, %rd19;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r12, [retval0+0];
	
	//{
	}// Callseq End 13
	ld.global.u64 	%rd21, [%rd6];
	ld.global.u64 	%rd22, [%rd7];
	mul.lo.s64 	%rd23, %rd21, %rd22;
	cvta.to.global.u64 	%rd24, %rd3;
	st.global.u64 	[%rd24], %rd23;
	ld.global.u64 	%rd25, [%rd6];
	ld.global.u64 	%rd26, [%rd7];
	ld.global.u64 	%rd27, [%rd7+8];
	ld.global.u64 	%rd28, [%rd7+16];
	st.local.u64 	[%rd11], %rd25;
	st.local.u64 	[%rd11+8], %rd26;
	st.local.u64 	[%rd11+16], %rd27;
	st.local.u64 	[%rd11+24], %rd28;
	st.local.u64 	[%rd11+32], %rd23;
	mov.u64 	%rd29, $str8;
	cvta.global.u64 	%rd30, %rd29;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 14

BB7_2:
	ret;
}

	// .globl	arrayTestModStages
.visible .entry arrayTestModStages(
	.param .u32 arrayTestModStages_param_0,
	.param .u64 arrayTestModStages_param_1,
	.param .u64 arrayTestModStages_param_2,
	.param .u64 arrayTestModStages_param_3,
	.param .u64 arrayTestModStages_param_4,
	.param .u64 arrayTestModStages_param_5,
	.param .u64 arrayTestModStages_param_6,
	.param .u32 arrayTestModStages_param_7,
	.param .u32 arrayTestModStages_param_8,
	.param .u32 arrayTestModStages_param_9
)
{
	.local .align 8 .b8 	__local_depot8[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<42>;


	mov.u64 	%rd41, __local_depot8;
	cvta.local.u64 	%SP, %rd41;
	ld.param.u32 	%r1, [arrayTestModStages_param_0];
	ld.param.u64 	%rd1, [arrayTestModStages_param_1];
	ld.param.u64 	%rd2, [arrayTestModStages_param_2];
	ld.param.u64 	%rd3, [arrayTestModStages_param_3];
	ld.param.u64 	%rd4, [arrayTestModStages_param_4];
	ld.param.u64 	%rd5, [arrayTestModStages_param_5];
	ld.param.u64 	%rd6, [arrayTestModStages_param_6];
	ld.param.u32 	%r2, [arrayTestModStages_param_7];
	ld.param.u32 	%r3, [arrayTestModStages_param_8];
	ld.param.u32 	%r4, [arrayTestModStages_param_9];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mul.lo.s32 	%r7, %r5, %r6;
	mov.u32 	%r8, %tid.x;
	neg.s32 	%r9, %r8;
	setp.ne.s32	%p1, %r7, %r9;
	@%p1 bra 	BB8_2;

	cvta.to.global.u64 	%rd7, %rd1;
	cvta.to.global.u64 	%rd8, %rd2;
	cvta.to.global.u64 	%rd9, %rd5;
	cvta.to.global.u64 	%rd10, %rd4;
	cvta.to.global.u64 	%rd11, %rd6;
	add.u64 	%rd12, %SP, 0;
	cvta.to.local.u64 	%rd13, %rd12;
	st.local.u32 	[%rd13], %r1;
	st.local.u32 	[%rd13+4], %r3;
	st.local.u32 	[%rd13+8], %r4;
	mov.u64 	%rd14, $str9;
	cvta.global.u64 	%rd15, %rd14;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 15
	st.local.u32 	[%rd13], %r2;
	mov.u64 	%rd16, $str10;
	cvta.global.u64 	%rd17, %rd16;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 16
	st.local.u32 	[%rd13], %r1;
	st.local.u64 	[%rd13+8], %rd1;
	st.local.u64 	[%rd13+16], %rd2;
	st.local.u64 	[%rd13+24], %rd3;
	mov.u64 	%rd18, $str4;
	cvta.global.u64 	%rd19, %rd18;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r12, [retval0+0];
	
	//{
	}// Callseq End 17
	ld.global.u64 	%rd20, [%rd11];
	ld.global.u64 	%rd21, [%rd11+272];
	st.local.u64 	[%rd13], %rd20;
	st.local.u64 	[%rd13+8], %rd21;
	mov.u64 	%rd22, $str11;
	cvta.global.u64 	%rd23, %rd22;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 18
	ld.global.u32 	%r14, [%rd10];
	ld.global.u32 	%r15, [%rd10+4];
	ld.global.u32 	%r16, [%rd10+8];
	st.local.u32 	[%rd13], %r14;
	st.local.u32 	[%rd13+4], %r15;
	st.local.u32 	[%rd13+8], %r16;
	mov.u64 	%rd24, $str5;
	cvta.global.u64 	%rd25, %rd24;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd25;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 19
	ld.global.u64 	%rd26, [%rd9];
	ld.global.u64 	%rd27, [%rd9+8];
	ld.global.u64 	%rd28, [%rd9+16];
	st.local.u64 	[%rd13], %rd26;
	st.local.u64 	[%rd13+8], %rd27;
	st.local.u64 	[%rd13+16], %rd28;
	mov.u64 	%rd29, $str6;
	cvta.global.u64 	%rd30, %rd29;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 20
	ld.global.u64 	%rd31, [%rd7];
	ld.global.u64 	%rd32, [%rd8];
	mul.lo.s64 	%rd33, %rd31, %rd32;
	cvta.to.global.u64 	%rd34, %rd3;
	st.global.u64 	[%rd34], %rd33;
	ld.global.u64 	%rd35, [%rd7];
	ld.global.u64 	%rd36, [%rd8];
	ld.global.u64 	%rd37, [%rd8+8];
	ld.global.u64 	%rd38, [%rd8+16];
	st.local.u64 	[%rd13], %rd35;
	st.local.u64 	[%rd13+8], %rd36;
	st.local.u64 	[%rd13+16], %rd37;
	st.local.u64 	[%rd13+24], %rd38;
	st.local.u64 	[%rd13+32], %rd33;
	mov.u64 	%rd39, $str8;
	cvta.global.u64 	%rd40, %rd39;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 21

BB8_2:
	ret;
}

	// .globl	multiplyBy2_self
.visible .entry multiplyBy2_self(
	.param .u32 multiplyBy2_self_param_0,
	.param .u64 multiplyBy2_self_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r2, [multiplyBy2_self_param_0];
	ld.param.u64 	%rd1, [multiplyBy2_self_param_1];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r3;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB9_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.u64 	%rd5, [%rd4];
	shl.b64 	%rd6, %rd5, 1;
	st.global.u64 	[%rd4], %rd6;

BB9_2:
	ret;
}


